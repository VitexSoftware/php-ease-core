#!groovy

String[] distributions = ['debian:bullseye', 'debian:bookworm', 'ubuntu:jammy']

String vendor = 'vitexsoftware'
String distribution = ''
//String distroFamily = ''
String distroCodename = ''
String ver = ''

properties([
    copyArtifactPermission('*')
])

node() {
    ansiColor('xterm') {
        stage('SCM Checkout') {
            checkout scm
        }
    }
}

/**@
 * Build all distributions
 */

distributions.each {
    distribution = it

    println  'Dist:' + distribution

    dist = distribution.split(':')
    //      distroFamily = dist[0]
    distroCodename = dist[1]

    buildImage = ''

    node('amd64') {
        ansiColor('xterm') {
            stage('Checkout ' + distribution) {
                buildImage = docker.image(vendor + '/' + distribution)
                sh 'git checkout debian/changelog'
                String version = sh(
                    script: 'dpkg-parsechangelog --show-field Version',
                    returnStdout: true
                ).trim()
                ver = version + '.' + env.BUILD_NUMBER  + '~' + distroCodename
            }
            stage('Build ' + distribution) {
                buildImage.inside {
                    sh 'dch -b -v ' + ver  + ' "' + env.BUILD_TAG  + '"'
                    sh 'sudo apt-get update --allow-releaseinfo-change'
                    sh 'sudo chown jenkins:jenkins ..'
                    sh 'sudo apt -y install composer'
                    sh 'composer --version'
                    sh 'sudo apt -y remove php8.1-common || true'
                    sh 'debuild-pbuilder  -i -us -uc -b'
                    sh 'mkdir -p $WORKSPACE/dist/debian/ ; rm -rf $WORKSPACE/dist/debian/* ; for deb in $(cat debian/files | awk \'{print $1}\'); do mv "../$deb" $WORKSPACE/dist/debian/; done'
                }
            }

            stage('Test ' + distribution) {
                buildImage.inside {
                    Integer debconfDebug = 0 //Set to "5" or "developer" to debug debconf
                    sh 'cd $WORKSPACE/dist/debian/ ; dpkg-scanpackages . /dev/null | gzip -9c > Packages.gz; cd $WORKSPACE'
                    sh 'echo "deb [trusted=yes] file://///$WORKSPACE/dist/debian/ ./" | sudo tee /etc/apt/sources.list.d/local.list'
                    sh 'sudo apt-get update --allow-releaseinfo-change'
                    sh 'echo "INSTALATION"'
                    sh 'IFS="\n\b"; for package in  `ls $WORKSPACE/dist/debian/ | grep .deb | awk -F_ \'{print \$1}\'` ; do  echo -e "${GREEN} installing ${package} on `lsb_release -sc` ${ENDCOLOR} " ; sudo  DEBIAN_FRONTEND=noninteractive apt-get -y install php-mbstring ; sudo  DEBIAN_FRONTEND=noninteractive DEBCONF_DEBUG=' + debconfDebug  + ' apt-get -y install $package ; done;'
                    stash includes: 'dist/**', name: 'dist-' + distroCodename
                }
            }
            stage('Copy artifacts ' + distribution ) {
                buildImage.inside {
                    sh 'mv $WORKSPACE/dist/debian/*.deb $WORKSPACE'
                }
            }
        }
    }
}

